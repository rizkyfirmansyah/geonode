# Generated by Django 2.2.16 on 2021-05-24 21:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0059_fill_empty_resource_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=255)),
                ('description', models.TextField(default='')),
                ('description_en', models.TextField(default='', null=True)),
                ('gn_description', models.TextField(default='', null=True, verbose_name='SDI description')),
                ('gn_description_en', models.TextField(default='', null=True, verbose_name='SDI description')),
                ('is_choice', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Metadata Type of Data',
                'ordering': ('identifier',),
            },
        ),
        migrations.RemoveField(
            model_name='resourcebase',
            name='attribution',
        ),
        migrations.RemoveField(
            model_name='thesaurus',
            name='order',
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='author',
            field=models.CharField(blank=True, help_text='data custodian or people/organizations that contributed to the data set (separated by commas). A short description rather than source column.', max_length=2048, null=True, verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='data_description',
            field=models.TextField(blank=True, help_text='description or abstract of the data and methodology', max_length=2000, null=True, verbose_name='data description'),
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='date_content',
            field=models.CharField(blank=True, help_text='date or time period that the data represents', max_length=255, null=True, verbose_name='date of content'),
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='source',
            field=models.CharField(blank=True, help_text='people/organizations that contributed to the data set (separate by commas), or link to the journal article, from which institutions the data was obtained', max_length=2048, null=True, verbose_name='Source'),
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='spatial_resolution',
            field=models.CharField(blank=True, help_text='describes the spatial resolution: e.g. 1:50.000 or 30m', max_length=255, null=True, verbose_name='Spatial resolution/scale'),
        ),
        migrations.RemoveField(
            model_name='resourcebase',
            name='category',
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='category',
            field=models.ManyToManyField(blank=True, help_text='high-level geographic data thematic classification to assist in the grouping and search of available geographic data sets.', null=True, to='base.TopicCategory'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='constraints_other',
            field=models.TextField(blank=True, help_text='other restrictions and legal prerequisites for accessing and using the resource or metadata', null=True, verbose_name='Restrictions other'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='data_quality_statement',
            field=models.TextField(blank=True, help_text="general explanation of the data producer's knowledge about the lineage of a dataset", max_length=2000, null=True, verbose_name='Data quality statement'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='featured',
            field=models.BooleanField(default=False, help_text='should this resource be advertised in home page?', verbose_name='Featured'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='is_approved',
            field=models.BooleanField(default=True, help_text='is this resource validated from a publisher or editor?', verbose_name='Approved'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='is_published',
            field=models.BooleanField(default=True, help_text='should this resource be published and searchable?', verbose_name='Is Published'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='language',
            field=models.CharField(choices=[('eng', 'English'), ('ind', 'Indonesian')], default='eng', help_text='language used within the dataset', max_length=3, verbose_name='Language'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='maintenance_frequency',
            field=models.CharField(blank=True, choices=[('unknown', 'frequency of maintenance for the data is not known'), ('continual', 'data is repeatedly and frequently updated'), ('notPlanned', 'there are no plans to update the data'), ('asNeeded', 'data is updated as deemed necessary'), ('daily', 'data is updated each day'), ('annually', 'data is updated every year'), ('biannually', 'data is updated twice each year'), ('quarterly', 'data is updated every three months'), ('monthly', 'data is updated each month'), ('fortnightly', 'data is updated every two weeks'), ('weekly', 'data is updated on a weekly basis')], help_text='frequency with which modifications and deletions are made to the data after it is first produced', max_length=255, null=True, verbose_name='maintenance frequency'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='metadata_only',
            field=models.BooleanField(default=False, help_text='if true, will be excluded from search', verbose_name='Metadata'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owned_resource', to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='restriction_code_type',
            field=models.ForeignKey(blank=True, help_text='limitation(s) placed upon the access or use of the data.', limit_choices_to=models.Q(is_choice=True), null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.RestrictionCodeType', verbose_name='Restrictions'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='spatial_representation_type',
            field=models.ForeignKey(blank=True, help_text='method used to represent geographic information in the dataset.', limit_choices_to=models.Q(is_choice=True), null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.SpatialRepresentationType', verbose_name='Spatial representation type'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='supplemental_information',
            field=models.TextField(default='No information provided', help_text='any other descriptive information about the dataset', max_length=2000, verbose_name='Supplemental information'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='temporal_extent_end',
            field=models.DateTimeField(blank=True, help_text='time period covered by the content of the dataset (end)', null=True, verbose_name='Temporal extent end'),
        ),
        migrations.AlterField(
            model_name='resourcebase',
            name='temporal_extent_start',
            field=models.DateTimeField(blank=True, help_text='time period covered by the content of the dataset (start)', null=True, verbose_name='Temporal extent start'),
        ),
        migrations.AlterField(
            model_name='restrictioncodetype',
            name='gn_description',
            field=models.TextField(max_length=255, verbose_name='SDI description'),
        ),
        migrations.AlterField(
            model_name='restrictioncodetype',
            name='gn_description_en',
            field=models.TextField(max_length=255, null=True, verbose_name='SDI description'),
        ),
        migrations.AlterField(
            model_name='restrictioncodetype',
            name='identifier',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='spatialrepresentationtype',
            name='gn_description',
            field=models.CharField(max_length=255, verbose_name='SDI description'),
        ),
        migrations.AlterField(
            model_name='spatialrepresentationtype',
            name='gn_description_en',
            field=models.CharField(max_length=255, null=True, verbose_name='SDI description'),
        ),
        migrations.AlterField(
            model_name='spatialrepresentationtype',
            name='identifier',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='topiccategory',
            name='gn_description',
            field=models.TextField(default='', null=True, verbose_name='SDI description'),
        ),
        migrations.AlterField(
            model_name='topiccategory',
            name='gn_description_en',
            field=models.TextField(default='', null=True, verbose_name='SDI description'),
        ),
        migrations.AddField(
            model_name='resourcebase',
            name='data_type',
            field=models.ForeignKey(blank=True, help_text='type of your data.', limit_choices_to=models.Q(is_choice=True), null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.DataType'),
        ),
    ]
